# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Department(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Department - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'department_id': 'str',
            'agent_count': 'float',
            'name': 'str',
            'online_status': 'str',
            'agent_ids': 'list[str]'
        }

        self.attribute_map = {
            'department_id': 'department_id',
            'agent_count': 'agent_count',
            'name': 'name',
            'online_status': 'online_status',
            'agent_ids': 'agent_ids'
        }

        self._department_id = None
        self._agent_count = None
        self._name = None
        self._online_status = None
        self._agent_ids = None

    @property
    def department_id(self):
        """
        Gets the department_id of this Department.


        :return: The department_id of this Department.
        :rtype: str
        """
        return self._department_id

    @department_id.setter
    def department_id(self, department_id):
        """
        Sets the department_id of this Department.


        :param department_id: The department_id of this Department.
        :type: str
        """
        self._department_id = department_id

    @property
    def agent_count(self):
        """
        Gets the agent_count of this Department.


        :return: The agent_count of this Department.
        :rtype: float
        """
        return self._agent_count

    @agent_count.setter
    def agent_count(self, agent_count):
        """
        Sets the agent_count of this Department.


        :param agent_count: The agent_count of this Department.
        :type: float
        """
        self._agent_count = agent_count

    @property
    def name(self):
        """
        Gets the name of this Department.


        :return: The name of this Department.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this Department.


        :param name: The name of this Department.
        :type: str
        """
        self._name = name

    @property
    def online_status(self):
        """
        Gets the online_status of this Department.


        :return: The online_status of this Department.
        :rtype: str
        """
        return self._online_status

    @online_status.setter
    def online_status(self, online_status):
        """
        Sets the online_status of this Department.


        :param online_status: The online_status of this Department.
        :type: str
        """
        self._online_status = online_status

    @property
    def agent_ids(self):
        """
        Gets the agent_ids of this Department.


        :return: The agent_ids of this Department.
        :rtype: list[str]
        """
        return self._agent_ids

    @agent_ids.setter
    def agent_ids(self, agent_ids):
        """
        Sets the agent_ids of this Department.


        :param agent_ids: The agent_ids of this Department.
        :type: list[str]
        """
        self._agent_ids = agent_ids

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

