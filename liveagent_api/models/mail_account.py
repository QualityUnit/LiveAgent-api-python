# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class MailAccount(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        MailAccount - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'mailaccount_id': 'str',
            'fetch_type': 'str',
            'email': 'str',
            'department_id': 'str',
            'status': 'str',
            'provider': 'str',
            'last_mail_date': 'str',
            'last_fetch_date': 'str'
        }

        self.attribute_map = {
            'mailaccount_id': 'mailaccount_id',
            'fetch_type': 'fetch_type',
            'email': 'email',
            'department_id': 'department_id',
            'status': 'status',
            'provider': 'provider',
            'last_mail_date': 'last_mail_date',
            'last_fetch_date': 'last_fetch_date'
        }

        self._mailaccount_id = None
        self._fetch_type = None
        self._email = None
        self._department_id = None
        self._status = None
        self._provider = None
        self._last_mail_date = None
        self._last_fetch_date = None

    @property
    def mailaccount_id(self):
        """
        Gets the mailaccount_id of this MailAccount.


        :return: The mailaccount_id of this MailAccount.
        :rtype: str
        """
        return self._mailaccount_id

    @mailaccount_id.setter
    def mailaccount_id(self, mailaccount_id):
        """
        Sets the mailaccount_id of this MailAccount.


        :param mailaccount_id: The mailaccount_id of this MailAccount.
        :type: str
        """
        self._mailaccount_id = mailaccount_id

    @property
    def fetch_type(self):
        """
        Gets the fetch_type of this MailAccount.
        I - Imap, 3 - POP3, P - piping, B - built-in, F - forwarding\n

        :return: The fetch_type of this MailAccount.
        :rtype: str
        """
        return self._fetch_type

    @fetch_type.setter
    def fetch_type(self, fetch_type):
        """
        Sets the fetch_type of this MailAccount.
        I - Imap, 3 - POP3, P - piping, B - built-in, F - forwarding\n

        :param fetch_type: The fetch_type of this MailAccount.
        :type: str
        """
        self._fetch_type = fetch_type

    @property
    def email(self):
        """
        Gets the email of this MailAccount.


        :return: The email of this MailAccount.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """
        Sets the email of this MailAccount.


        :param email: The email of this MailAccount.
        :type: str
        """
        self._email = email

    @property
    def department_id(self):
        """
        Gets the department_id of this MailAccount.


        :return: The department_id of this MailAccount.
        :rtype: str
        """
        return self._department_id

    @department_id.setter
    def department_id(self, department_id):
        """
        Sets the department_id of this MailAccount.


        :param department_id: The department_id of this MailAccount.
        :type: str
        """
        self._department_id = department_id

    @property
    def status(self):
        """
        Gets the status of this MailAccount.
        A - active, I - inactive, P - pending, S - skipping\n

        :return: The status of this MailAccount.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this MailAccount.
        A - active, I - inactive, P - pending, S - skipping\n

        :param status: The status of this MailAccount.
        :type: str
        """
        self._status = status

    @property
    def provider(self):
        """
        Gets the provider of this MailAccount.


        :return: The provider of this MailAccount.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """
        Sets the provider of this MailAccount.


        :param provider: The provider of this MailAccount.
        :type: str
        """
        self._provider = provider

    @property
    def last_mail_date(self):
        """
        Gets the last_mail_date of this MailAccount.


        :return: The last_mail_date of this MailAccount.
        :rtype: str
        """
        return self._last_mail_date

    @last_mail_date.setter
    def last_mail_date(self, last_mail_date):
        """
        Sets the last_mail_date of this MailAccount.


        :param last_mail_date: The last_mail_date of this MailAccount.
        :type: str
        """
        self._last_mail_date = last_mail_date

    @property
    def last_fetch_date(self):
        """
        Gets the last_fetch_date of this MailAccount.


        :return: The last_fetch_date of this MailAccount.
        :rtype: str
        """
        return self._last_fetch_date

    @last_fetch_date.setter
    def last_fetch_date(self, last_fetch_date):
        """
        Sets the last_fetch_date of this MailAccount.


        :param last_fetch_date: The last_fetch_date of this MailAccount.
        :type: str
        """
        self._last_fetch_date = last_fetch_date

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

