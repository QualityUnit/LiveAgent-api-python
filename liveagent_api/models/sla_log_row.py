# coding: utf-8

"""
    LiveAgent API

    This page contains complete API documentation for LiveAgent software. To display additional info and examples for specific API method, just click on the method name in the list below.<br/><br/>To be able to make API requests you need to generate an API key in your admin panel first. [See this article for detailed info.](https://support.liveagent.com/741982-API-key)<br/><br/>Additional info about more advanced agent, contact or ticket API filters can be found [in this article](https://support.liveagent.com/513528-APIv3-advanced-filter-examples).<br/><br/>If you have any question or doubts regarding this API, please do not hesitate to contact our support team.  # noqa: E501

    OpenAPI spec version: 3.0.0
    Contact: support@qualityunit.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from liveagent_api.configuration import Configuration


class SlaLogRow(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'conversationid': 'str',
        'code': 'str',
        'sla_ticket_id': 'str',
        'departmentid': 'str',
        'department_name': 'str',
        'levelid': 'str',
        'sla_level_name': 'str',
        'sla': 'str',
        'date_created': 'str',
        'date_closed': 'str',
        'date_due': 'str',
        'sla_level_id': 'str',
        'sla_type': 'datetime',
        'responsible_agent_id': 'str',
        'responsible_agent_firstname': 'str',
        'responsible_agent_lastname': 'str',
        'responsible_agent_avatar_url': 'str',
        'resolving_agent_id': 'str',
        'resolving_agent_firstname': 'str',
        'resolving_agent_lastname': 'str',
        'resolving_agent_avatar_url': 'str',
        'req_contactid': 'str',
        'req_firstname': 'str',
        'req_lastname': 'str',
        'req_systemname': 'str',
        'req_contact_name': 'str',
        'req_avatar_url': 'str'
    }

    attribute_map = {
        'id': 'id',
        'conversationid': 'conversationid',
        'code': 'code',
        'sla_ticket_id': 'sla_ticket_id',
        'departmentid': 'departmentid',
        'department_name': 'department_name',
        'levelid': 'levelid',
        'sla_level_name': 'sla_level_name',
        'sla': 'sla',
        'date_created': 'date_created',
        'date_closed': 'date_closed',
        'date_due': 'date_due',
        'sla_level_id': 'sla_level_id',
        'sla_type': 'sla_type',
        'responsible_agent_id': 'responsible_agent_id',
        'responsible_agent_firstname': 'responsible_agent_firstname',
        'responsible_agent_lastname': 'responsible_agent_lastname',
        'responsible_agent_avatar_url': 'responsible_agent_avatar_url',
        'resolving_agent_id': 'resolving_agent_id',
        'resolving_agent_firstname': 'resolving_agent_firstname',
        'resolving_agent_lastname': 'resolving_agent_lastname',
        'resolving_agent_avatar_url': 'resolving_agent_avatar_url',
        'req_contactid': 'req_contactid',
        'req_firstname': 'req_firstname',
        'req_lastname': 'req_lastname',
        'req_systemname': 'req_systemname',
        'req_contact_name': 'req_contactName',
        'req_avatar_url': 'req_avatar_url'
    }

    def __init__(self, id=None, conversationid=None, code=None, sla_ticket_id=None, departmentid=None, department_name=None, levelid=None, sla_level_name=None, sla=None, date_created=None, date_closed=None, date_due=None, sla_level_id=None, sla_type=None, responsible_agent_id=None, responsible_agent_firstname=None, responsible_agent_lastname=None, responsible_agent_avatar_url=None, resolving_agent_id=None, resolving_agent_firstname=None, resolving_agent_lastname=None, resolving_agent_avatar_url=None, req_contactid=None, req_firstname=None, req_lastname=None, req_systemname=None, req_contact_name=None, req_avatar_url=None, _configuration=None):  # noqa: E501
        """SlaLogRow - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._conversationid = None
        self._code = None
        self._sla_ticket_id = None
        self._departmentid = None
        self._department_name = None
        self._levelid = None
        self._sla_level_name = None
        self._sla = None
        self._date_created = None
        self._date_closed = None
        self._date_due = None
        self._sla_level_id = None
        self._sla_type = None
        self._responsible_agent_id = None
        self._responsible_agent_firstname = None
        self._responsible_agent_lastname = None
        self._responsible_agent_avatar_url = None
        self._resolving_agent_id = None
        self._resolving_agent_firstname = None
        self._resolving_agent_lastname = None
        self._resolving_agent_avatar_url = None
        self._req_contactid = None
        self._req_firstname = None
        self._req_lastname = None
        self._req_systemname = None
        self._req_contact_name = None
        self._req_avatar_url = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if conversationid is not None:
            self.conversationid = conversationid
        if code is not None:
            self.code = code
        if sla_ticket_id is not None:
            self.sla_ticket_id = sla_ticket_id
        if departmentid is not None:
            self.departmentid = departmentid
        if department_name is not None:
            self.department_name = department_name
        if levelid is not None:
            self.levelid = levelid
        if sla_level_name is not None:
            self.sla_level_name = sla_level_name
        if sla is not None:
            self.sla = sla
        if date_created is not None:
            self.date_created = date_created
        if date_closed is not None:
            self.date_closed = date_closed
        if date_due is not None:
            self.date_due = date_due
        if sla_level_id is not None:
            self.sla_level_id = sla_level_id
        if sla_type is not None:
            self.sla_type = sla_type
        if responsible_agent_id is not None:
            self.responsible_agent_id = responsible_agent_id
        if responsible_agent_firstname is not None:
            self.responsible_agent_firstname = responsible_agent_firstname
        if responsible_agent_lastname is not None:
            self.responsible_agent_lastname = responsible_agent_lastname
        if responsible_agent_avatar_url is not None:
            self.responsible_agent_avatar_url = responsible_agent_avatar_url
        if resolving_agent_id is not None:
            self.resolving_agent_id = resolving_agent_id
        if resolving_agent_firstname is not None:
            self.resolving_agent_firstname = resolving_agent_firstname
        if resolving_agent_lastname is not None:
            self.resolving_agent_lastname = resolving_agent_lastname
        if resolving_agent_avatar_url is not None:
            self.resolving_agent_avatar_url = resolving_agent_avatar_url
        if req_contactid is not None:
            self.req_contactid = req_contactid
        if req_firstname is not None:
            self.req_firstname = req_firstname
        if req_lastname is not None:
            self.req_lastname = req_lastname
        if req_systemname is not None:
            self.req_systemname = req_systemname
        if req_contact_name is not None:
            self.req_contact_name = req_contact_name
        if req_avatar_url is not None:
            self.req_avatar_url = req_avatar_url

    @property
    def id(self):
        """Gets the id of this SlaLogRow.  # noqa: E501


        :return: The id of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SlaLogRow.


        :param id: The id of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def conversationid(self):
        """Gets the conversationid of this SlaLogRow.  # noqa: E501


        :return: The conversationid of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._conversationid

    @conversationid.setter
    def conversationid(self, conversationid):
        """Sets the conversationid of this SlaLogRow.


        :param conversationid: The conversationid of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._conversationid = conversationid

    @property
    def code(self):
        """Gets the code of this SlaLogRow.  # noqa: E501


        :return: The code of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this SlaLogRow.


        :param code: The code of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._code = code

    @property
    def sla_ticket_id(self):
        """Gets the sla_ticket_id of this SlaLogRow.  # noqa: E501


        :return: The sla_ticket_id of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._sla_ticket_id

    @sla_ticket_id.setter
    def sla_ticket_id(self, sla_ticket_id):
        """Sets the sla_ticket_id of this SlaLogRow.


        :param sla_ticket_id: The sla_ticket_id of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._sla_ticket_id = sla_ticket_id

    @property
    def departmentid(self):
        """Gets the departmentid of this SlaLogRow.  # noqa: E501


        :return: The departmentid of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._departmentid

    @departmentid.setter
    def departmentid(self, departmentid):
        """Sets the departmentid of this SlaLogRow.


        :param departmentid: The departmentid of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._departmentid = departmentid

    @property
    def department_name(self):
        """Gets the department_name of this SlaLogRow.  # noqa: E501


        :return: The department_name of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._department_name

    @department_name.setter
    def department_name(self, department_name):
        """Sets the department_name of this SlaLogRow.


        :param department_name: The department_name of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._department_name = department_name

    @property
    def levelid(self):
        """Gets the levelid of this SlaLogRow.  # noqa: E501


        :return: The levelid of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._levelid

    @levelid.setter
    def levelid(self, levelid):
        """Sets the levelid of this SlaLogRow.


        :param levelid: The levelid of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._levelid = levelid

    @property
    def sla_level_name(self):
        """Gets the sla_level_name of this SlaLogRow.  # noqa: E501


        :return: The sla_level_name of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._sla_level_name

    @sla_level_name.setter
    def sla_level_name(self, sla_level_name):
        """Sets the sla_level_name of this SlaLogRow.


        :param sla_level_name: The sla_level_name of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._sla_level_name = sla_level_name

    @property
    def sla(self):
        """Gets the sla of this SlaLogRow.  # noqa: E501


        :return: The sla of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._sla

    @sla.setter
    def sla(self, sla):
        """Sets the sla of this SlaLogRow.


        :param sla: The sla of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._sla = sla

    @property
    def date_created(self):
        """Gets the date_created of this SlaLogRow.  # noqa: E501


        :return: The date_created of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SlaLogRow.


        :param date_created: The date_created of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._date_created = date_created

    @property
    def date_closed(self):
        """Gets the date_closed of this SlaLogRow.  # noqa: E501


        :return: The date_closed of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._date_closed

    @date_closed.setter
    def date_closed(self, date_closed):
        """Sets the date_closed of this SlaLogRow.


        :param date_closed: The date_closed of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._date_closed = date_closed

    @property
    def date_due(self):
        """Gets the date_due of this SlaLogRow.  # noqa: E501


        :return: The date_due of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._date_due

    @date_due.setter
    def date_due(self, date_due):
        """Sets the date_due of this SlaLogRow.


        :param date_due: The date_due of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._date_due = date_due

    @property
    def sla_level_id(self):
        """Gets the sla_level_id of this SlaLogRow.  # noqa: E501


        :return: The sla_level_id of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._sla_level_id

    @sla_level_id.setter
    def sla_level_id(self, sla_level_id):
        """Sets the sla_level_id of this SlaLogRow.


        :param sla_level_id: The sla_level_id of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._sla_level_id = sla_level_id

    @property
    def sla_type(self):
        """Gets the sla_type of this SlaLogRow.  # noqa: E501


        :return: The sla_type of this SlaLogRow.  # noqa: E501
        :rtype: datetime
        """
        return self._sla_type

    @sla_type.setter
    def sla_type(self, sla_type):
        """Sets the sla_type of this SlaLogRow.


        :param sla_type: The sla_type of this SlaLogRow.  # noqa: E501
        :type: datetime
        """

        self._sla_type = sla_type

    @property
    def responsible_agent_id(self):
        """Gets the responsible_agent_id of this SlaLogRow.  # noqa: E501


        :return: The responsible_agent_id of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._responsible_agent_id

    @responsible_agent_id.setter
    def responsible_agent_id(self, responsible_agent_id):
        """Sets the responsible_agent_id of this SlaLogRow.


        :param responsible_agent_id: The responsible_agent_id of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._responsible_agent_id = responsible_agent_id

    @property
    def responsible_agent_firstname(self):
        """Gets the responsible_agent_firstname of this SlaLogRow.  # noqa: E501


        :return: The responsible_agent_firstname of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._responsible_agent_firstname

    @responsible_agent_firstname.setter
    def responsible_agent_firstname(self, responsible_agent_firstname):
        """Sets the responsible_agent_firstname of this SlaLogRow.


        :param responsible_agent_firstname: The responsible_agent_firstname of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._responsible_agent_firstname = responsible_agent_firstname

    @property
    def responsible_agent_lastname(self):
        """Gets the responsible_agent_lastname of this SlaLogRow.  # noqa: E501


        :return: The responsible_agent_lastname of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._responsible_agent_lastname

    @responsible_agent_lastname.setter
    def responsible_agent_lastname(self, responsible_agent_lastname):
        """Sets the responsible_agent_lastname of this SlaLogRow.


        :param responsible_agent_lastname: The responsible_agent_lastname of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._responsible_agent_lastname = responsible_agent_lastname

    @property
    def responsible_agent_avatar_url(self):
        """Gets the responsible_agent_avatar_url of this SlaLogRow.  # noqa: E501


        :return: The responsible_agent_avatar_url of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._responsible_agent_avatar_url

    @responsible_agent_avatar_url.setter
    def responsible_agent_avatar_url(self, responsible_agent_avatar_url):
        """Sets the responsible_agent_avatar_url of this SlaLogRow.


        :param responsible_agent_avatar_url: The responsible_agent_avatar_url of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._responsible_agent_avatar_url = responsible_agent_avatar_url

    @property
    def resolving_agent_id(self):
        """Gets the resolving_agent_id of this SlaLogRow.  # noqa: E501


        :return: The resolving_agent_id of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._resolving_agent_id

    @resolving_agent_id.setter
    def resolving_agent_id(self, resolving_agent_id):
        """Sets the resolving_agent_id of this SlaLogRow.


        :param resolving_agent_id: The resolving_agent_id of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._resolving_agent_id = resolving_agent_id

    @property
    def resolving_agent_firstname(self):
        """Gets the resolving_agent_firstname of this SlaLogRow.  # noqa: E501


        :return: The resolving_agent_firstname of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._resolving_agent_firstname

    @resolving_agent_firstname.setter
    def resolving_agent_firstname(self, resolving_agent_firstname):
        """Sets the resolving_agent_firstname of this SlaLogRow.


        :param resolving_agent_firstname: The resolving_agent_firstname of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._resolving_agent_firstname = resolving_agent_firstname

    @property
    def resolving_agent_lastname(self):
        """Gets the resolving_agent_lastname of this SlaLogRow.  # noqa: E501


        :return: The resolving_agent_lastname of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._resolving_agent_lastname

    @resolving_agent_lastname.setter
    def resolving_agent_lastname(self, resolving_agent_lastname):
        """Sets the resolving_agent_lastname of this SlaLogRow.


        :param resolving_agent_lastname: The resolving_agent_lastname of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._resolving_agent_lastname = resolving_agent_lastname

    @property
    def resolving_agent_avatar_url(self):
        """Gets the resolving_agent_avatar_url of this SlaLogRow.  # noqa: E501


        :return: The resolving_agent_avatar_url of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._resolving_agent_avatar_url

    @resolving_agent_avatar_url.setter
    def resolving_agent_avatar_url(self, resolving_agent_avatar_url):
        """Sets the resolving_agent_avatar_url of this SlaLogRow.


        :param resolving_agent_avatar_url: The resolving_agent_avatar_url of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._resolving_agent_avatar_url = resolving_agent_avatar_url

    @property
    def req_contactid(self):
        """Gets the req_contactid of this SlaLogRow.  # noqa: E501


        :return: The req_contactid of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._req_contactid

    @req_contactid.setter
    def req_contactid(self, req_contactid):
        """Sets the req_contactid of this SlaLogRow.


        :param req_contactid: The req_contactid of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._req_contactid = req_contactid

    @property
    def req_firstname(self):
        """Gets the req_firstname of this SlaLogRow.  # noqa: E501


        :return: The req_firstname of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._req_firstname

    @req_firstname.setter
    def req_firstname(self, req_firstname):
        """Sets the req_firstname of this SlaLogRow.


        :param req_firstname: The req_firstname of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._req_firstname = req_firstname

    @property
    def req_lastname(self):
        """Gets the req_lastname of this SlaLogRow.  # noqa: E501


        :return: The req_lastname of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._req_lastname

    @req_lastname.setter
    def req_lastname(self, req_lastname):
        """Sets the req_lastname of this SlaLogRow.


        :param req_lastname: The req_lastname of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._req_lastname = req_lastname

    @property
    def req_systemname(self):
        """Gets the req_systemname of this SlaLogRow.  # noqa: E501


        :return: The req_systemname of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._req_systemname

    @req_systemname.setter
    def req_systemname(self, req_systemname):
        """Sets the req_systemname of this SlaLogRow.


        :param req_systemname: The req_systemname of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._req_systemname = req_systemname

    @property
    def req_contact_name(self):
        """Gets the req_contact_name of this SlaLogRow.  # noqa: E501


        :return: The req_contact_name of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._req_contact_name

    @req_contact_name.setter
    def req_contact_name(self, req_contact_name):
        """Sets the req_contact_name of this SlaLogRow.


        :param req_contact_name: The req_contact_name of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._req_contact_name = req_contact_name

    @property
    def req_avatar_url(self):
        """Gets the req_avatar_url of this SlaLogRow.  # noqa: E501


        :return: The req_avatar_url of this SlaLogRow.  # noqa: E501
        :rtype: str
        """
        return self._req_avatar_url

    @req_avatar_url.setter
    def req_avatar_url(self, req_avatar_url):
        """Sets the req_avatar_url of this SlaLogRow.


        :param req_avatar_url: The req_avatar_url of this SlaLogRow.  # noqa: E501
        :type: str
        """

        self._req_avatar_url = req_avatar_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SlaLogRow, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SlaLogRow):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SlaLogRow):
            return True

        return self.to_dict() != other.to_dict()
