# coding: utf-8

"""
    LiveAgent API


    OpenAPI spec version: 3.0.0
    Contact: support@qualityunit.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class BillingMetric(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        BillingMetric - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'name': 'str',
            'amount_in_price': 'int',
            'limit': 'int',
            'unit_price': 'int',
            'unit_size': 'int'
        }

        self.attribute_map = {
            'name': 'name',
            'amount_in_price': 'amount_in_price',
            'limit': 'limit',
            'unit_price': 'unit_price',
            'unit_size': 'unit_size'
        }

        self._name = None
        self._amount_in_price = None
        self._limit = None
        self._unit_price = None
        self._unit_size = None

    @property
    def name(self):
        """
        Gets the name of this BillingMetric.


        :return: The name of this BillingMetric.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this BillingMetric.


        :param name: The name of this BillingMetric.
        :type: str
        """
        
        self._name = name

    @property
    def amount_in_price(self):
        """
        Gets the amount_in_price of this BillingMetric.


        :return: The amount_in_price of this BillingMetric.
        :rtype: int
        """
        return self._amount_in_price

    @amount_in_price.setter
    def amount_in_price(self, amount_in_price):
        """
        Sets the amount_in_price of this BillingMetric.


        :param amount_in_price: The amount_in_price of this BillingMetric.
        :type: int
        """
        
        self._amount_in_price = amount_in_price

    @property
    def limit(self):
        """
        Gets the limit of this BillingMetric.


        :return: The limit of this BillingMetric.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """
        Sets the limit of this BillingMetric.


        :param limit: The limit of this BillingMetric.
        :type: int
        """
        
        self._limit = limit

    @property
    def unit_price(self):
        """
        Gets the unit_price of this BillingMetric.


        :return: The unit_price of this BillingMetric.
        :rtype: int
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """
        Sets the unit_price of this BillingMetric.


        :param unit_price: The unit_price of this BillingMetric.
        :type: int
        """
        
        self._unit_price = unit_price

    @property
    def unit_size(self):
        """
        Gets the unit_size of this BillingMetric.


        :return: The unit_size of this BillingMetric.
        :rtype: int
        """
        return self._unit_size

    @unit_size.setter
    def unit_size(self, unit_size):
        """
        Sets the unit_size of this BillingMetric.


        :param unit_size: The unit_size of this BillingMetric.
        :type: int
        """
        
        self._unit_size = unit_size

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

